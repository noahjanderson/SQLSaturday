/*
Deployment script for sqlsat

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "sqlsat"
:setvar DefaultFilePrefix "sqlsat"
:setvar DefaultDataPath "C:\Users\Noah\AppData\Local\Microsoft\VisualStudio\SSDT\sqlsat"
:setvar DefaultLogPath "C:\Users\Noah\AppData\Local\Microsoft\VisualStudio\SSDT\sqlsat"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 32505e65-72fb-44b8-9d0b-ae67d0b51a74 is skipped, element [dbo].[ActorLocation].[Id] (SqlSimpleColumn) will not be renamed to ActorId';


GO
PRINT N'Rename refactoring operation with key 9c197ba5-2a0f-44db-88df-b13d0eedbcbf is skipped, element [dbo].[Actor].[Id] (SqlSimpleColumn) will not be renamed to ActorId';


GO
PRINT N'Rename refactoring operation with key af38bb71-af27-42c1-abb8-ae0e9fd9844e is skipped, element [dbo].[Role].[Id] (SqlSimpleColumn) will not be renamed to RoleId';


GO
PRINT N'Rename refactoring operation with key 1f2ff549-1f33-4c01-894d-15a89365884a is skipped, element [dbo].[Event].[Id] (SqlSimpleColumn) will not be renamed to EventId';


GO
PRINT N'Rename refactoring operation with key 9ee11599-3954-4868-b223-ad0fe0578564 is skipped, element [dbo].[Actor].[Lastname] (SqlSimpleColumn) will not be renamed to LastName';


GO
PRINT N'Rename refactoring operation with key bdf89db9-e7d2-436c-b521-79b2ee27e655 is skipped, element [dbo].[Actor].[Firstname] (SqlSimpleColumn) will not be renamed to FirstName';


GO
PRINT N'Rename refactoring operation with key 19c3da07-a1ba-48e6-a5bc-780cd63b8b93, f5a83933-90a7-41a8-b530-a4c9781895bb, 640d95b0-95b7-42b8-ba56-15a589b89b50, 8de252cc-bfb0-4652-a9e5-fc8ea639a6db is skipped, element [dbo].[Email].[Id] (SqlSimpleColumn) will not be renamed to EmailId';


GO
PRINT N'Rename refactoring operation with key 32afe0ab-907d-4faa-b83b-b5e09462986e is skipped, element [dbo].[ActorRole].[Id] (SqlSimpleColumn) will not be renamed to ActorId';


GO
PRINT N'Rename refactoring operation with key 39b43677-89ed-4017-b3a4-a4eebbd2c68d is skipped, element [dbo].[Raffle].[Id] (SqlSimpleColumn) will not be renamed to RaffleId';


GO
PRINT N'Rename refactoring operation with key 0ea782b7-870d-460a-8226-d965461cab23 is skipped, element [dbo].[RaffleEntries].[Id] (SqlSimpleColumn) will not be renamed to RaffleId';


GO
PRINT N'Rename refactoring operation with key c0349caf-0e3b-4212-9656-1ce6f8c4a78d, 6b391cf2-ad65-495a-8f54-31de4f3e1448 is skipped, element [dbo].[RaffleEntries].[Email] (SqlSimpleColumn) will not be renamed to ActorId';


GO
PRINT N'Rename refactoring operation with key 0f36e582-c5fd-4222-b281-f794978071ef is skipped, element [dbo].[ActorEmail].[Id] (SqlSimpleColumn) will not be renamed to ActorId';


GO
PRINT N'Rename refactoring operation with key 22e98503-4f5d-406b-bbdf-a3a8a24f3da6 is skipped, element [dbo].[Location].[Id] (SqlSimpleColumn) will not be renamed to LocationId';


GO
PRINT N'Rename refactoring operation with key 90231b32-48fb-442c-a11c-4a1c1cbf4f04 is skipped, element [dbo].[Location].[StreetNumberId] (SqlSimpleColumn) will not be renamed to StreetId';


GO
PRINT N'Rename refactoring operation with key aa47acde-ecf1-4deb-96c1-8a192ca4d77b is skipped, element [dbo].[Street].[Id] (SqlSimpleColumn) will not be renamed to StreetId';


GO
PRINT N'Rename refactoring operation with key 21a7879f-2db8-48e1-b257-7068c6bfc6bc is skipped, element [dbo].[CityId].[Id] (SqlSimpleColumn) will not be renamed to CityId';


GO
PRINT N'Rename refactoring operation with key 04295ab5-579a-424b-93fa-a85808181b31 is skipped, element [dbo].[State].[Id] (SqlSimpleColumn) will not be renamed to StateId';


GO
PRINT N'Rename refactoring operation with key 545710ac-4c8f-45e4-beca-ddb75cf63d28, b4fde728-9bc1-4e18-8359-f1202874f256 is skipped, element [dbo].[ZipCode].[Id] (SqlSimpleColumn) will not be renamed to ZipCodeId';


GO
PRINT N'Rename refactoring operation with key 27cfe0a1-a0f0-4c84-becc-7662ce410b43 is skipped, element [dbo].[ActorLocation].[Id] (SqlSimpleColumn) will not be renamed to ActorId';


GO
PRINT N'Rename refactoring operation with key 1502a2e9-59e3-45be-a589-b43c61fdc4f6 is skipped, element [dbo].[LocationCapacity].[Id] (SqlSimpleColumn) will not be renamed to Capacity';


GO
PRINT N'Rename refactoring operation with key 9ac058fa-29db-46e6-8ea8-ef5d7c7b8ebf is skipped, element [dbo].[TrackId].[Id] (SqlSimpleColumn) will not be renamed to TrackId';


GO
PRINT N'Rename refactoring operation with key e78902e8-4444-4662-b556-119925c5b1c4 is skipped, element [dbo].[Class].[Id] (SqlSimpleColumn) will not be renamed to ClassId';


GO
PRINT N'Rename refactoring operation with key aa7b21cf-7e68-4cb3-8387-bb9645938d6a is skipped, element [dbo].[Topic].[Id] (SqlSimpleColumn) will not be renamed to TopicId';


GO
PRINT N'Rename refactoring operation with key ff2727b4-2d88-4f38-b02a-64ef60569d19 is skipped, element [dbo].[Class].[Class] (SqlSimpleColumn) will not be renamed to TopicId';


GO
PRINT N'Rename refactoring operation with key 50b6fca5-3203-44bf-912b-68a6f680ff70 is skipped, element [dbo].[Schedule].[Id] (SqlSimpleColumn) will not be renamed to ClassId';


GO
PRINT N'Rename refactoring operation with key e9a69b1f-b249-4e0f-b675-5ed32ac53370 is skipped, element [dbo].[Email].[ActoriId] (SqlSimpleColumn) will not be renamed to ActorId';


GO
PRINT N'Creating [dbo].[Actor]...';


GO
CREATE TABLE [dbo].[Actor] (
    [ActorId]   INT          IDENTITY (1, 1) NOT NULL,
    [LastName]  VARCHAR (50) NOT NULL,
    [FirstName] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([ActorId] ASC)
);


GO
PRINT N'Creating [dbo].[ActorLocation]...';


GO
CREATE TABLE [dbo].[ActorLocation] (
    [ActorId]    INT NOT NULL,
    [LocationId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ActorId] ASC, [LocationId] ASC)
);


GO
PRINT N'Creating [dbo].[ActorRole]...';


GO
CREATE TABLE [dbo].[ActorRole] (
    [ActorId] INT NOT NULL,
    [RoleId]  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([RoleId] ASC, [ActorId] ASC)
);


GO
PRINT N'Creating [dbo].[Attendee]...';


GO
CREATE TABLE [dbo].[Attendee] (
    [EventId] INT NOT NULL,
    [ActorId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ActorId] ASC, [EventId] ASC)
);


GO
PRINT N'Creating [dbo].[City]...';


GO
CREATE TABLE [dbo].[City] (
    [CityId] INT          NOT NULL,
    [Name]   VARCHAR (55) NOT NULL,
    PRIMARY KEY CLUSTERED ([CityId] ASC)
);


GO
PRINT N'Creating [dbo].[Class]...';


GO
CREATE TABLE [dbo].[Class] (
    [ClassId]     INT           NOT NULL,
    [TopicId]     INT           NOT NULL,
    [Name]        VARCHAR (50)  NOT NULL,
    [Description] VARCHAR (250) NOT NULL,
    [Level]       VARCHAR (12)  NOT NULL,
    PRIMARY KEY CLUSTERED ([ClassId] ASC)
);


GO
PRINT N'Creating [dbo].[Email]...';


GO
CREATE TABLE [dbo].[Email] (
    [EmailId] INT           IDENTITY (1, 1) NOT NULL,
    [Email]   VARCHAR (256) NOT NULL,
    [ActorId] INT           NOT NULL,
    CONSTRAINT [PK_EmailId] PRIMARY KEY CLUSTERED ([EmailId] ASC)
);


GO
PRINT N'Creating [dbo].[Event]...';


GO
CREATE TABLE [dbo].[Event] (
    [EventId] INT          IDENTITY (1, 1) NOT NULL,
    [Event]   VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([EventId] ASC)
);


GO
PRINT N'Creating [dbo].[EventDate]...';


GO
CREATE TABLE [dbo].[EventDate] (
    [EventId] INT      NOT NULL,
    [Date]    DATETIME NOT NULL,
    [EndDate] DATETIME NOT NULL,
    CONSTRAINT [PK_EventDate] PRIMARY KEY CLUSTERED ([EventId] ASC, [Date] ASC)
);


GO
PRINT N'Creating [dbo].[Location]...';


GO
CREATE TABLE [dbo].[Location] (
    [LocationId] INT          NOT NULL,
    [StreetId]   INT          NOT NULL,
    [CityId]     INT          NOT NULL,
    [StateId]    VARCHAR (55) NOT NULL,
    [ZipCodeId]  VARCHAR (5)  NOT NULL,
    CONSTRAINT [PK_Location] PRIMARY KEY CLUSTERED ([LocationId] ASC)
);


GO
PRINT N'Creating [dbo].[RaffleEntries]...';


GO
CREATE TABLE [dbo].[RaffleEntries] (
    [RaffleId] INT NOT NULL,
    [EmailId]  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([RaffleId] ASC)
);


GO
PRINT N'Creating [dbo].[Role]...';


GO
CREATE TABLE [dbo].[Role] (
    [RoleId] INT          IDENTITY (1, 1) NOT NULL,
    [Role]   VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([RoleId] ASC)
);


GO
PRINT N'Creating [dbo].[Schedule]...';


GO
CREATE TABLE [dbo].[Schedule] (
    [ClassId]    INT      NOT NULL,
    [ActorId]    INT      NOT NULL,
    [LocationId] INT      NOT NULL,
    [Time]       DATETIME NOT NULL,
    [EndTime]    AS       DATEADD(MINUTE, 60, [Time]),
    PRIMARY KEY CLUSTERED ([ClassId] ASC, [ActorId] ASC, [LocationId] ASC, [Time] ASC)
);


GO
PRINT N'Creating [dbo].[State]...';


GO
CREATE TABLE [dbo].[State] (
    [StateId] VARCHAR (55) NOT NULL,
    PRIMARY KEY CLUSTERED ([StateId] ASC)
);


GO
PRINT N'Creating [dbo].[Street]...';


GO
CREATE TABLE [dbo].[Street] (
    [StreetId] INT           NOT NULL,
    [Number]   VARCHAR (5)   NOT NULL,
    [Name]     VARCHAR (250) NOT NULL,
    [Room]     VARCHAR (10)  NOT NULL,
    [Capacity] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([StreetId] ASC)
);


GO
PRINT N'Creating [dbo].[Topic]...';


GO
CREATE TABLE [dbo].[Topic] (
    [TopicId] INT          NOT NULL,
    [TrackId] INT          NOT NULL,
    [Topic]   VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([TopicId] ASC)
);


GO
PRINT N'Creating [dbo].[Track]...';


GO
CREATE TABLE [dbo].[Track] (
    [TrackId] INT          NOT NULL,
    [Track]   VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([TrackId] ASC)
);


GO
PRINT N'Creating [dbo].[ZipCode]...';


GO
CREATE TABLE [dbo].[ZipCode] (
    [ZipCodeId] VARCHAR (5) NOT NULL,
    PRIMARY KEY CLUSTERED ([ZipCodeId] ASC)
);


GO
PRINT N'Creating [dbo].[FK_ActorLocation_Actor]...';


GO
ALTER TABLE [dbo].[ActorLocation] WITH NOCHECK
    ADD CONSTRAINT [FK_ActorLocation_Actor] FOREIGN KEY ([ActorId]) REFERENCES [dbo].[Actor] ([ActorId]);


GO
PRINT N'Creating [dbo].[FK_ActorLocation_Location]...';


GO
ALTER TABLE [dbo].[ActorLocation] WITH NOCHECK
    ADD CONSTRAINT [FK_ActorLocation_Location] FOREIGN KEY ([LocationId]) REFERENCES [dbo].[Location] ([LocationId]);


GO
PRINT N'Creating [dbo].[FK_ActorRole_Actor]...';


GO
ALTER TABLE [dbo].[ActorRole] WITH NOCHECK
    ADD CONSTRAINT [FK_ActorRole_Actor] FOREIGN KEY ([ActorId]) REFERENCES [dbo].[Actor] ([ActorId]);


GO
PRINT N'Creating [dbo].[FK_ActorRole_Role]...';


GO
ALTER TABLE [dbo].[ActorRole] WITH NOCHECK
    ADD CONSTRAINT [FK_ActorRole_Role] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Role] ([RoleId]);


GO
PRINT N'Creating [dbo].[FK_Attendee_Actor]...';


GO
ALTER TABLE [dbo].[Attendee] WITH NOCHECK
    ADD CONSTRAINT [FK_Attendee_Actor] FOREIGN KEY ([ActorId]) REFERENCES [dbo].[Actor] ([ActorId]);


GO
PRINT N'Creating [dbo].[FK_Attendee_Event]...';


GO
ALTER TABLE [dbo].[Attendee] WITH NOCHECK
    ADD CONSTRAINT [FK_Attendee_Event] FOREIGN KEY ([EventId]) REFERENCES [dbo].[Event] ([EventId]);


GO
PRINT N'Creating [dbo].[FK_Class_Topic]...';


GO
ALTER TABLE [dbo].[Class] WITH NOCHECK
    ADD CONSTRAINT [FK_Class_Topic] FOREIGN KEY ([TopicId]) REFERENCES [dbo].[Topic] ([TopicId]);


GO
PRINT N'Creating [dbo].[FK_Email_Actor]...';


GO
ALTER TABLE [dbo].[Email] WITH NOCHECK
    ADD CONSTRAINT [FK_Email_Actor] FOREIGN KEY ([ActorId]) REFERENCES [dbo].[Actor] ([ActorId]);


GO
PRINT N'Creating unnamed constraint on [dbo].[EventDate]...';


GO
ALTER TABLE [dbo].[EventDate] WITH NOCHECK
    ADD FOREIGN KEY ([EventId]) REFERENCES [dbo].[Event] ([EventId]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Location_Street]...';


GO
ALTER TABLE [dbo].[Location] WITH NOCHECK
    ADD CONSTRAINT [FK_Location_Street] FOREIGN KEY ([StreetId]) REFERENCES [dbo].[Street] ([StreetId]);


GO
PRINT N'Creating [dbo].[FK_Location_City]...';


GO
ALTER TABLE [dbo].[Location] WITH NOCHECK
    ADD CONSTRAINT [FK_Location_City] FOREIGN KEY ([CityId]) REFERENCES [dbo].[City] ([CityId]);


GO
PRINT N'Creating [dbo].[FK_Location_State]...';


GO
ALTER TABLE [dbo].[Location] WITH NOCHECK
    ADD CONSTRAINT [FK_Location_State] FOREIGN KEY ([StateId]) REFERENCES [dbo].[State] ([StateId]);


GO
PRINT N'Creating [dbo].[FK_Location_ZipCode]...';


GO
ALTER TABLE [dbo].[Location] WITH NOCHECK
    ADD CONSTRAINT [FK_Location_ZipCode] FOREIGN KEY ([ZipCodeId]) REFERENCES [dbo].[ZipCode] ([ZipCodeId]);


GO
PRINT N'Creating [dbo].[FK_RaffleEntries_Email]...';


GO
ALTER TABLE [dbo].[RaffleEntries] WITH NOCHECK
    ADD CONSTRAINT [FK_RaffleEntries_Email] FOREIGN KEY ([EmailId]) REFERENCES [dbo].[Email] ([EmailId]);


GO
PRINT N'Creating [dbo].[FK_Schedule_ClassId]...';


GO
ALTER TABLE [dbo].[Schedule] WITH NOCHECK
    ADD CONSTRAINT [FK_Schedule_ClassId] FOREIGN KEY ([ClassId]) REFERENCES [dbo].[Class] ([ClassId]);


GO
PRINT N'Creating [dbo].[FK_Schedule_Actor]...';


GO
ALTER TABLE [dbo].[Schedule] WITH NOCHECK
    ADD CONSTRAINT [FK_Schedule_Actor] FOREIGN KEY ([ActorId]) REFERENCES [dbo].[Actor] ([ActorId]);


GO
PRINT N'Creating [dbo].[FK_Schedule_Location]...';


GO
ALTER TABLE [dbo].[Schedule] WITH NOCHECK
    ADD CONSTRAINT [FK_Schedule_Location] FOREIGN KEY ([LocationId]) REFERENCES [dbo].[Location] ([LocationId]);


GO
PRINT N'Creating [dbo].[FK_Topic_Track]...';


GO
ALTER TABLE [dbo].[Topic] WITH NOCHECK
    ADD CONSTRAINT [FK_Topic_Track] FOREIGN KEY ([TrackId]) REFERENCES [dbo].[Track] ([TrackId]);


GO
PRINT N'Creating [dbo].[Class].[Level].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Begginer, Intermediate, Advanced', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Class', @level2type = N'COLUMN', @level2name = N'Level';


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9c197ba5-2a0f-44db-88df-b13d0eedbcbf')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9c197ba5-2a0f-44db-88df-b13d0eedbcbf')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'af38bb71-af27-42c1-abb8-ae0e9fd9844e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('af38bb71-af27-42c1-abb8-ae0e9fd9844e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1f2ff549-1f33-4c01-894d-15a89365884a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1f2ff549-1f33-4c01-894d-15a89365884a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9ee11599-3954-4868-b223-ad0fe0578564')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9ee11599-3954-4868-b223-ad0fe0578564')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bdf89db9-e7d2-436c-b521-79b2ee27e655')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bdf89db9-e7d2-436c-b521-79b2ee27e655')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '19c3da07-a1ba-48e6-a5bc-780cd63b8b93')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('19c3da07-a1ba-48e6-a5bc-780cd63b8b93')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '32afe0ab-907d-4faa-b83b-b5e09462986e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('32afe0ab-907d-4faa-b83b-b5e09462986e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '39b43677-89ed-4017-b3a4-a4eebbd2c68d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('39b43677-89ed-4017-b3a4-a4eebbd2c68d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0ea782b7-870d-460a-8226-d965461cab23')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0ea782b7-870d-460a-8226-d965461cab23')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f5a83933-90a7-41a8-b530-a4c9781895bb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f5a83933-90a7-41a8-b530-a4c9781895bb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c0349caf-0e3b-4212-9656-1ce6f8c4a78d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c0349caf-0e3b-4212-9656-1ce6f8c4a78d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0f36e582-c5fd-4222-b281-f794978071ef')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0f36e582-c5fd-4222-b281-f794978071ef')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '32505e65-72fb-44b8-9d0b-ae67d0b51a74')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('32505e65-72fb-44b8-9d0b-ae67d0b51a74')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '22e98503-4f5d-406b-bbdf-a3a8a24f3da6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('22e98503-4f5d-406b-bbdf-a3a8a24f3da6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '90231b32-48fb-442c-a11c-4a1c1cbf4f04')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('90231b32-48fb-442c-a11c-4a1c1cbf4f04')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'aa47acde-ecf1-4deb-96c1-8a192ca4d77b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('aa47acde-ecf1-4deb-96c1-8a192ca4d77b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '21a7879f-2db8-48e1-b257-7068c6bfc6bc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('21a7879f-2db8-48e1-b257-7068c6bfc6bc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '04295ab5-579a-424b-93fa-a85808181b31')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('04295ab5-579a-424b-93fa-a85808181b31')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '545710ac-4c8f-45e4-beca-ddb75cf63d28')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('545710ac-4c8f-45e4-beca-ddb75cf63d28')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b4fde728-9bc1-4e18-8359-f1202874f256')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b4fde728-9bc1-4e18-8359-f1202874f256')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '27cfe0a1-a0f0-4c84-becc-7662ce410b43')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('27cfe0a1-a0f0-4c84-becc-7662ce410b43')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1502a2e9-59e3-45be-a589-b43c61fdc4f6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1502a2e9-59e3-45be-a589-b43c61fdc4f6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9ac058fa-29db-46e6-8ea8-ef5d7c7b8ebf')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9ac058fa-29db-46e6-8ea8-ef5d7c7b8ebf')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e78902e8-4444-4662-b556-119925c5b1c4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e78902e8-4444-4662-b556-119925c5b1c4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'aa7b21cf-7e68-4cb3-8387-bb9645938d6a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('aa7b21cf-7e68-4cb3-8387-bb9645938d6a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ff2727b4-2d88-4f38-b02a-64ef60569d19')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ff2727b4-2d88-4f38-b02a-64ef60569d19')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '50b6fca5-3203-44bf-912b-68a6f680ff70')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('50b6fca5-3203-44bf-912b-68a6f680ff70')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6b391cf2-ad65-495a-8f54-31de4f3e1448')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6b391cf2-ad65-495a-8f54-31de4f3e1448')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '640d95b0-95b7-42b8-ba56-15a589b89b50')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('640d95b0-95b7-42b8-ba56-15a589b89b50')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8de252cc-bfb0-4652-a9e5-fc8ea639a6db')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8de252cc-bfb0-4652-a9e5-fc8ea639a6db')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e9a69b1f-b249-4e0f-b675-5ed32ac53370')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e9a69b1f-b249-4e0f-b675-5ed32ac53370')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ActorLocation] WITH CHECK CHECK CONSTRAINT [FK_ActorLocation_Actor];

ALTER TABLE [dbo].[ActorLocation] WITH CHECK CHECK CONSTRAINT [FK_ActorLocation_Location];

ALTER TABLE [dbo].[ActorRole] WITH CHECK CHECK CONSTRAINT [FK_ActorRole_Actor];

ALTER TABLE [dbo].[ActorRole] WITH CHECK CHECK CONSTRAINT [FK_ActorRole_Role];

ALTER TABLE [dbo].[Attendee] WITH CHECK CHECK CONSTRAINT [FK_Attendee_Actor];

ALTER TABLE [dbo].[Attendee] WITH CHECK CHECK CONSTRAINT [FK_Attendee_Event];

ALTER TABLE [dbo].[Class] WITH CHECK CHECK CONSTRAINT [FK_Class_Topic];

ALTER TABLE [dbo].[Email] WITH CHECK CHECK CONSTRAINT [FK_Email_Actor];

ALTER TABLE [dbo].[Location] WITH CHECK CHECK CONSTRAINT [FK_Location_Street];

ALTER TABLE [dbo].[Location] WITH CHECK CHECK CONSTRAINT [FK_Location_City];

ALTER TABLE [dbo].[Location] WITH CHECK CHECK CONSTRAINT [FK_Location_State];

ALTER TABLE [dbo].[Location] WITH CHECK CHECK CONSTRAINT [FK_Location_ZipCode];

ALTER TABLE [dbo].[RaffleEntries] WITH CHECK CHECK CONSTRAINT [FK_RaffleEntries_Email];

ALTER TABLE [dbo].[Schedule] WITH CHECK CHECK CONSTRAINT [FK_Schedule_ClassId];

ALTER TABLE [dbo].[Schedule] WITH CHECK CHECK CONSTRAINT [FK_Schedule_Actor];

ALTER TABLE [dbo].[Schedule] WITH CHECK CHECK CONSTRAINT [FK_Schedule_Location];

ALTER TABLE [dbo].[Topic] WITH CHECK CHECK CONSTRAINT [FK_Topic_Track];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.EventDate'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
